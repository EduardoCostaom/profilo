load("//tools/build_defs:glob_defs.bzl", "subdir_glob")
load("//tools/build_defs/oss:profilo_defs.bzl", "profilo_oss_android_library", "profilo_oss_xplat_cxx_library")

profilo_oss_xplat_cxx_library(
    name = "fbjni",
    srcs = glob([
        "cxx/fbjni/**/*.cpp",
        "cxx/lyra/*.cpp",
    ]),
    header_namespace = "",
    exported_headers = subdir_glob([
        ("cxx", "fbjni/**/*.h"),
        ("cxx", "lyra/**/*.h"),
    ]),
    compiler_flags = [
        "-fexceptions",
        "-fno-omit-frame-pointer",
        "-frtti",
        "-ffunction-sections",
    ],
    exported_platform_linker_flags = [
        (
            "^android",
            ["-llog"],
        ),
        # There is a bug in ndk that would make linking fail for android log
        # lib. This is a workaround for older ndk, because newer ndk would
        # use a linker without bug.
        # See https://github.com/android-ndk/ndk/issues/556
        (
            "^android-arm64",
            ["-fuse-ld=gold"],
        ),
        (
            "^android-x86",
            ["-latomic"],
        ),
    ],
    soname = "libfbjni.$(ext)",
    visibility = [
        "PUBLIC",
    ],
)

profilo_oss_android_library(
    name = "fbjni-java",
    srcs = glob([
        "java/**/*.java",
    ]),
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//deps/jsr-305:jsr-305",
        "//deps/proguard:annotations",
        "//deps/soloader:soloader",
    ],
)
